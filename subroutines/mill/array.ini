[SUBROUTINE]
icon = icons/array.png
name =  Linear array
image = images/array.png
type = Linear array
help = 	<big>Create array of items</big>
		Drag and drop subroutines into Items parameter.
		Parameters num, dX, dY, dZ
		Uses G57 to make offsets! Returns to G54 afterwards!

order = num x y z r dx dy dz dr coord items
		
[PARAM_NUM]
name = Number
type = int
icon = icons/num.png
tool_tip = Number of copies
value = 5

[PARAM_X]
name = X0
type = float
icon = icons/dx.png
tool_tip = Origin X
value = 0

[PARAM_Y]
name = Y0
type = float
icon = icons/dy.png
tool_tip = Origin Y
value = 0

[PARAM_Z]
name = Z0
type = float
icon = icons/dz.png
tool_tip = Origin Z
value = 0

[PARAM_R]
name = Z0
type = float
icon = icons/dz.png
tool_tip = Origin angle
value = 0

[PARAM_DX]
name = dX
type = float
icon = icons/dx.png
tool_tip = X step
value = 10

[PARAM_DY]
name = dY
type = float
icon = icons/dy.png
tool_tip = Y step
value = 5

[PARAM_DZ]
name = dZ
type = float
icon = icons/dz.png
tool_tip = Z step
value = 0

[PARAM_DR]
name = dR
type = float
icon = icons/angle.png
tool_tip = Angle step
value = 0

[PARAM_COORD]
name = Coordinate system G
type = string
tool_tip = Use this coordinate system
value = 57

[PARAM_ITEMS]
name = Items
type = items
icon = icons/items.png
tool_tip = Drop Subroutines here


[DEFINITIONS]
content = 

[CALL]
content = 

[BEFORE]
content = 
	(Array - #self_id)
		<eval>self.include_once("rotate-xy.ngc")</eval>
		<eval>self.include_once("get-offsets.ngc")</eval>
	
		(Get x,y,z,r in machine coordinates)
		O<get-offsets> CALL 
		#<#self_id-x> = [0]
		#<#self_id-y> = [0]
		#<#self_id-z> = [#<_get_offsets_z>]
		#<#self_id-r> = [0]		

		#<#self_id-x0> = [#<_get_offsets_x> + #param_x]
		#<#self_id-y0> = [#<_get_offsets_y> + #param_y]
		#<#self_id-z0> = [#<_get_offsets_z>]
		#<#self_id-r0> = [#<_get_offsets_r> + #param_r]
		#<#self_id-restore-coord> = #5220
		
		(Array)
		G[#param_coord]
		; full id of feature is used to make able array of array's
		O<#self_id> REPEAT [#param_num]
		
			G92.1 (disable G92 offsets - they ruin the array after rotating coordinates) 
			(move and rotate coordinates)
			
			(Get rotated coordinates)
			O<rotate-xy> CALL [#<#self_id-x> + #<#self_id-x0>] [#<#self_id-y> + #<#self_id-y0>] [#<#self_id-x0>] [#<#self_id-y0>] [#<#self_id-r0>]
			#<#self_id-x1> = #<_rotate_result_x>
			#<#self_id-y1> = #<_rotate_result_y>
		
			O<coordinate-sys-to-num> CALL [#param_coord]
			#<coord> = #<_coordinate-to-num>
			
			G10 L2 P[#<coord>]  X#<#self_id-x1> Y#<#self_id-y1> Z#<#self_id-z> R[#<#self_id-r>+#<#self_id-r0>]

			; array body
		
[AFTER]
content = 
		; angle increment
			#<#self_id-x> = [#<#self_id-x> + #param_dx]
			#<#self_id-y> = [#<#self_id-y> + #param_dy]
			#<#self_id-z> = [#<#self_id-z> + #param_dz]
			#<#self_id-r> = [#<#self_id-r> + #param_dr]
		O<#self_id> END REPEAT

		O<coordinate-sys-to-num> CALL [#param_coord]
		#<coord> = #<_coordinate-to-num>
		G10 L2 P[#<coord>]  X[#<#self_id-x0>-#param_x] Y[#<#self_id-y0>-#param_y] Z[#<#self_id-z0>] R[#<#self_id-r0>-#param_r]
		O<coordinate-sys-from-num>	CALL [#<#self_id-restore-coord>]
		G[#<_coordinate-from-num>]
		
	(End Array - #self_id)	
