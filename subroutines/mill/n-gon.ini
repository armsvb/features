[SUBROUTINE]
icon = icons/n-gon.png
name = Ngon
image = images/n-gon.png
type = Ngon
help = 	<big>Creates N-gon</big>
		Parameters: <i>cX cY n R Angle Depth Depth_step Surface Rappid Final</i>
order = cx cy n r a 05 06 07 08 09  

[PARAM_CX]
name = cX
type = float
icon = icons/center.png
tool_tip = Center X
value = 0

[PARAM_CY]
name = cY
type = float
icon = icons/center.png
tool_tip = Center Y
value = 0

[PARAM_N]
name = n
type = float
tool_tip = Number of edges
value = 8

[PARAM_R]
name = R
type = float
icon = icons/height.png
tool_tip = Central radius
value = 10

[PARAM_A]
name = Angle
type = float
tool_tip = Starting angle
value = 0

[PARAM_05]
name = Depth
type = float
icon = icons/height.png
tool_tip = Depth
value = #<_global_depth>

[PARAM_06]
name = Depth_step
type = float
icon = icons/dz.png
tool_tip = Depth step per pass
value = #<_global_depth_step>

[PARAM_07]
name = Surface
type = float
icon = icons/dz.png
tool_tip = Surface height
value = #<_global_surface>

[PARAM_08]
name = Rappid
type = float
icon = icons/height.png
tool_tip = Rappid height
value = #<_global_rappid>

[PARAM_09]
name = Final cut
type = float
icon = icons/height.png
tool_tip = Rappid height
value = #<_global_final>


[DEFINITIONS]
content = 

	(Multipass sub definition)
	O<multipass-gon> SUB
		#<sub> = #1
		#<depth> = #2
		#<step> = #3
		#<surface> = #4
		#<rappid> = #5
		#<final> = #6		
		#<x0> = #7
		#<y0> = #8		
		#<n>  = #9
		#<r>  = #10
		#<a>  = #11

		G0 Z#<rappid>
		G0 X#<x0> Y#<y0>
		G92 X0 Y0
		G0 ^#<a> @#<r>
		#<z> = #<surface>
		O<multipass-while> WHILE [#<z> GT [#<depth>+#<final>]]
			
			#<z> = [#<z>-#<step>]
			O<multipass-if> IF [#<z> LT [#<depth>+#<final>]]
				#<z>=[#<depth>+#<final>]
			O<multipass-if> ENDIF 
			G1 Z#<z>	
			(call pass sub with the restof parameters)
			#<sub> = #1
			O#1 CALL [#<n>] [#<r>] [#<a>]
		
		O<multipass-while> ENDWHILE
		
		(Make final cut)
		G1 Z#<depth> 
		O#1 CALL [#<n>] [#<r>] [#<a>]
	
		G0 Z#<rappid>	
		G0 X0 Y0
		G92 X[#<x0>] Y[#<y0>] 

	O<multipass-gon> ENDSUB	

 	(Circle sub definition)
	#<_gon> = <eval>self.get_unique_id()</eval> ; should be unique id	
	O#<_gon> sub
		#<n>  = #1
		#<r>  = #2
		#<a>  = #3
		O<ngon-cycle> REPEAT [#<n>]
			#<a> = [#<a>+360/#<n>]
			G1 ^#<a> @#<r>
		O<ngon-cycle> ENDREPEAT
				
	O#<_gon> endsub

[CALL]
content = 
	( *********************************** )
	( N-gon Call )

	#<cx> = [#param_cx]
	#<cy> = [#param_cy]
	#<n> = [#param_n]
	#<r> = [#param_r]
	#<a> = [#param_a]
	#<r> = [#<r> + 0.5*#<_global_tool_d>]

	(               		sub           depth		 step		 surf		 rappid  	 	final)
	O<multipass-gon> CALL [#<_gon>]  [#param_05]  [#param_06]  [#param_07]  [#param_08]  [#param_09]  [#<cx>]  [#<cy>] [#<n>]  [#<r>]  [#<a>]

	( *********************************** )

[BEFORE]
content = 
	
[AFTER]
content = 
