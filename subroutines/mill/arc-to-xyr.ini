[SUBROUTINE]
icon = icons/arc-to-xyr.png
name = Arc
image = images/arc-to-xyr.png
type = Arc
help = 	<big>Creates arc_xyr</big>
		Parameters: <i>X0 Y0 X1 Y1 R CW Depth DepthStep Rappid Surface FinalCut</i>
order = x0 y0 x1 y1 r cw 05 06 07 08 09

[PARAM_X0]
name = X0
type = float
icon = icons/x.png
tool_tip = X0
value = -10

[PARAM_Y0]
name = Y0
type = float
icon = icons/y.png
tool_tip = Y0
value = 0

[PARAM_X1]
name = X1
type = float
icon = icons/arc.png
tool_tip = X1
value = 10

[PARAM_Y1]
name = Y1
type = float
icon = icons/arc.png
tool_tip = Y1
value = 0

[PARAM_R]
name = R
type = float
icon = icons/radius.png
tool_tip = Radius
value = 10

[PARAM_CW]
name = CW
type = float
icon = icons/arc-cw-ccw.png
tool_tip = CW=1 , CCW=-1
value = 1

[DEFINITIONS]
content = 

	(Multipass sub definition)
	O<multipass-arc-xyr> SUB
		#<sub> = #1
		#<x0> = #2
		#<y0> = #3		
		#<x1> = #4   
		#<y1> = #5
		#<r>  = #6
		#<cw> = #7 
		#<depth> = [#<_global_depth>]
		#<step> = [#<_global_depth_step>] 
		#<surface> = [#<_global_surface>]
		#<rappid> = [#<_global_rappid>]
		#<final> = [#<_global_final>]		

		(calculate center)
		#<cx> = [0]
		#<cy> = [0]
		#<p> = [#<x0>+#<x1>]
		#<q> = [-#<y0>-#<y1>]
		#<t> = [#<x1>-#<x0>]
		#<s> = [#<y0>-#<y1>]
		#<l> = [SQRT[#<t>**2 + #<s>**2]]
		#<m> = [SQRT[#<r>**2/#<l>**2  - 0.25]]
		O<depth_arc_xyr_if3> IF [#<cw> EQ -1]
				#<cx> = [#<p>/2 + #<s>*#<m>]
				#<cy> = [-#<q>/2 + #<t>*#<m>]
		O<depth_arc_xyr_if3> ELSE
				#<cx> = [#<p>/2 - #<s>*#<m>]
				#<cy> = [-#<q>/2 - #<t>*#<m>]
		O<depth_arc_xyr_if3> ENDIF		

		(cutter compensation)
		#<alfa> = [0]
		O<arc_xyr-if4> IF [#<x0> EQ #<cx>]
			O<arc_xyr-if5> IF [#<y0> GE #<cy>]
				#<alfa> = [90]
			O<arc_xyr-if5> ELSE 
				#<alfa> = [-90]
			O<arc_xyr-if5> ENDIF 
		O<arc_xyr-if4> ELSE
			#<alfa> = [180 - [ATAN[#<y0>-#<cy>]/[#<x0>-#<cx>]]]
		O<arc_xyr-if4> ENDIF
		#<dr> = [0.5*#<_global_tool_d>]
		#<x0> = [#<x0> - #<dr>*COS[#<alfa>]]
		#<y0> = [#<y0> + #<dr>*SIN[#<alfa>]]
	
		#<alfa> = [0]
		O<arc_xyr-if6> IF [#<x1> EQ #<cx>]
			O<arc_xyr-if7> IF [#<y1> GE #<cy>]
				#<alfa> = [90]
			O<arc_xyr-if7> ELSE 
				#<alfa> = [-90]
			O<arc_xyr-if7> ENDIF 
		O<arc_xyr-if6> ELSE
			#<alfa> = [180 - [ATAN[#<y1>-#<cy>]/[#<x1>-#<cx>]]]
		O<arc_xyr-if6> ENDIF
		#<x1> = [#<x1> - #<dr>*COS[#<alfa>]]
		#<y1> = [#<y1> + #<dr>*SIN[#<alfa>]]

		#<r> = [#<r> + #<dr>]
		(print,center cx = #<cx>,cy = #<cy>,x0 = #<x0>,y0 = #<y0>,x1 = #<x1>,y1 = #<y1>)

	
		F#<_global_feed> S#<_global_spindle>
		G0 Z#<rappid>
		G0 X#<x0> Y#<y0>
		#<z> = #<surface>
		O<multipass-while> WHILE [#<z> GT [#<depth>+#<final>]]
			
			#<z> = [#<z>-#<step>]
			O<multipass-if> IF [#<z> LT [#<depth>+#<final>]]
				#<z>=[#<depth>+#<final>]
			O<multipass-if> ENDIF 
			G1 Z#<z>  F#<_global_penetration_feed>
			F#<_global_feed>	
			(call pass sub with the restof parameters)
			#<sub> = #1
			O#1 CALL [#<x1>] [#<y1>] [#<r>] [#<cw>]
			#<cw> = [-1*[#<cw>]]
			#<tmp_mul> = [#<x0>]
			#<x0> = [#<x1>]
			#<x1> = [#<tmp_mul>]
			#<tmp_mul> = [#<y0>]
			#<y0> = [#<y1>]
			#<y1> = [#<tmp_mul>]
		
		O<multipass-while> ENDWHILE
		
		(Make final cut)
		G1 Z#<depth> F#<_global_penetration_feed>
		F#<_global_feed>
		O#1 CALL [#<x1>] [#<y1>] [#<r>] [#<cw>]
	
		G0 Z#<rappid>	
	O<multipass-arc-xyr> ENDSUB	

 	(Circle sub definition)
	#<_arc_xyr> = <eval>self.get_unique_id()</eval> ; should be unique id	
	O#<_arc_xyr> sub
		#<x> = #1   
		#<y> = #2
		#<r>  = #3
		#<cw> = #4 
		O<arc-if-01>IF [#<cw> GE 0]
			G2 X[#<x>] Y[#<y>] R[#<r>]
		O<arc-if-01>ELSE
			G3 X[#<x>] Y[#<y>] R[#<r>]			
		O<arc-if-01>ENDIF		
	O#<_arc_xyr> endsub

[CALL]
content = 
	( *********************************** )
	( Arc_xyr Call )

	#<x0> = [#param_x0]
	#<y0> = [#param_y0]
	#<x1> = [#param_x1]
	#<y1> = [#param_y1]
	#<r> = [#param_r]
	#<cw> = [#param_cw]


	O<multipass-arc-xyr> CALL [#<_arc_xyr>] [#<x0>]  [#<y0>] [#<x1>]  [#<y1>]  [#<r>]  [#<cw>]

	( *********************************** )

[BEFORE]
content = 
	
[AFTER]
content = 
