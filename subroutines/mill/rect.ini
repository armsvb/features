[SUBROUTINE]
icon = icons/rect-corner.png
name = Rectangle
image = images/rect-corner.png
type = Rectangle
help = 	Creates rectangle
		W H X0 Y0
order = 01 02 03 04 05 11

[PARAM_01]
name = X0
type = float
icon = icons/rect-corner.png
tool_tip = X0
value = 0

[PARAM_02]
name = Y0
type = float
icon = icons/rect-corner.png
tool_tip = Y0
value = 0

[PARAM_03]
name = Width
type = float
icon = icons/width.png
tool_tip = Width
value = 20

[PARAM_04]
name = Height
type = float
icon = icons/height.png
tool_tip = Height
value = 10

[PARAM_05]
name = Angle
type = float
icon = icons/angle.png
tool_tip = Angle
value = 0

[PARAM_11]
name = Angle Vert
type = float
icon = icons/angle-vert.png
tool_tip = Angle Vertical
value = 0

[DEFINITIONS]
content = 
	(Multipass sub definition)
	O<multipass_rect> SUB
		#<sub> = #1
		#<x0> = #2
		#<y0> = #3		
		#<w> = #4
		#<h> = #5		
		#<a> = #6
		#<av> = #7
		#<depth> = [#<_global_depth>]
		#<step> = [#<_global_depth_step>] 
		#<surface> = [#<_global_surface>]
		#<rappid> = [#<_global_rappid>]
		#<final> = [#<_global_final>]		

		F#<_global_feed> S#<_global_spindle>
		G0 Z#<rappid>
		G0 X#<x0> Y#<y0>
		#<delta> = 0		
		#<z> = #<surface>
		O<multipass-while> WHILE [#<z> GT [#<depth>+#<final>]]
			#<delta>=#<step>
			O<multipass-if> IF [[#<z>-#<step>] LT [#<depth>+#<final>]]
				#<delta>=[#<z>-#<depth>+#<final>]
			O<multipass-if> ENDIF 
			#<z> = [#<z>-#<delta>]
			G1 X#<x0> Y#<y0> Z#<z> F#<_global_penetration_feed>
			F#<_global_feed> 
			(call pass sub with the restof parameters)
			#<sub> = #1
			O#1 CALL [#<x0>] [#<y0>] [#<w>] [#<h>] [#<a>]
			O<multipass-if02> IF [#<z> GT [#<depth>+#<final>]] 
				O<rotate-xy> CALL [#<delta>*TAN[#<av>]] [#<delta>*TAN[#<av>]] [0] [0] [#<a>]
				#<dx> = #<_rotate_result_x>
				#<dy> = #<_rotate_result_y>
				#<x0> = [#<x0>+#<dx>]
				#<y0> = [#<y0>+#<dy>]
				#<w> = [#<w>-[2*#<delta>*TAN[#<av>]]]
				#<h> = [#<h>-[2*#<delta>*TAN[#<av>]]]
			O<multipass-if02> ELSE
				O<rotate-xy> CALL [#<final>*TAN[#<av>]] [#<final>*TAN[#<av>]] [0] [0] [#<a>]
				#<dx> = #<_rotate_result_x>
				#<dy> = #<_rotate_result_y>
				#<x0> = [#<x0>+#<dx>]
				#<y0> = [#<y0>+#<dy>] 
				#<w> = [#<w>-[2*#<final>*TAN[#<av>]]]
				#<h> = [#<h>-[2*#<final>*TAN[#<av>]]]
			O<multipass-if02> ENDIF 
			O<multipass-if04> IF [#<w> LT 0 OR #<h> LT 0]
				#<final>=0
				O<multipass-while> BREAK
			O<multipass-if04> ENDIF 
		
		O<multipass-while> ENDWHILE
		
		(Make final cut)
		O<multipass-if03> IF [#<final> GT 0]
			G1 X#<x0> Y#<y0> Z#<depth> F#<_global_penetration_feed>
			F#<_global_final_feed> S#<_global_final_spindle> 
			O#1 CALL [#<x0>] [#<y0>] [#<w>] [#<h>] [#<a>] 
		O<multipass-if03> ENDIF 
	
		G0 Z#<rappid>	
	O<multipass_rect> ENDSUB

	<eval>self.include_once("rotate-xy.ngc")</eval>
	#<_rect> = <eval>self.get_unique_id()</eval> ; should be unique id	
	(Rectangle sub definition)
	
	O#<_rect> sub
		
		#<x> = #1    
		#<y> = #2
		#<w> = #3 
		#<h> = #4
		#<a> = #5

		O<rotate-xy> CALL [0] [1] [0] [0] [#<a>]
		#<dx> = #<_rotate_result_x>
		#<dy> = #<_rotate_result_y>

		#<x> = [#<x>+#<dy>*#<w>]
		#<y> = [#<y>-#<dx>*#<w>]
		G01 X#<x> Y#<y>
	
		#<x> = [#<x>+#<dx>*#<h>]
		#<y> = [#<y>+#<dy>*#<h>]
		G01 X#<x> Y#<y>
	
		#<x> = [#<x>-#<dy>*#<w>]
		#<y> = [#<y>+#<dx>*#<w>]
		G01 X#<x> Y#<y>
	
		#<x> = [#<x>-#<dx>*#<h>]
		#<y> = [#<y>-#<dy>*#<h>]
		G01 X#<x> Y#<y>
		
	O#<_rect> endsub


[CALL]
content = 
	( *********************************** )
	( Rect Call )

	#<x0> = [#param_01]
	#<y0> = [#param_02]
	#<w> = [#param_03]
	#<h> = [#param_04]
	#<a> = [#param_05]
	#<av> = [#param_11]
	#<x0> = [#<x0> - 0.5*#<_global_tool_d>]
	#<y0> = [#<y0> - 0.5*#<_global_tool_d>]
	#<w> = [#<w> + #<_global_tool_d>]
	#<h> = [#<h> + #<_global_tool_d>]

	O<rotate-xy> CALL [#<x0>] [#<y0>] [0] [0] [#<a>]
	#<x0> = #<_rotate_result_x>
	#<y0> = #<_rotate_result_y>

	O<multipass_rect> CALL [#<_rect>] [#<x0>] [#<y0>] [#<w>] [#<h>]  [#<a>]  [#<av>] 


[BEFORE]
content = 
	
[AFTER]
content = 
