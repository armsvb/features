[SUBROUTINE]
icon = icons/circle.png
name = Circle Spiral
image = images/circle.png
type = Circle Spiral
help = 	<big>Creates circle</big>
		Parameters: <i>CX CY R Depth Rappid</i>
order = cx cy d depth depth_step surface  final rappid

[PARAM_CX]
name = CX
type = float
icon = icons/rect.png
tool_tip = CX
value = 0

[PARAM_CY]
name = CY
type = float
icon = icons/rect.png
tool_tip = CY
value = 0

[PARAM_D]
name = D
type = float
icon = icons/diameter.png
tool_tip = Diameter
value = 1

[PARAM_V]
name = V
type = float
icon = icons/angle-vert.png
tool_tip = Vert angle
value = 1

[PARAM_DEPTH]
name = Depth
type = float
icon = icons/height.png
tool_tip = Depth
value = #<_global_depth>

[PARAM_DEPTH_STEP]
name = Depth step
type = float
icon = icons/dz.png
tool_tip = Depth step per pass
value = #<_global_depth_step>

[PARAM_SURFACE]
name = Surface
type = float
icon = icons/dz.png
tool_tip = Surface height
value = #<_global_surface>

[PARAM_RAPPID]
name = Rappid
type = float
icon = icons/height.png
tool_tip = Rappid height
value = #<_global_rappid>

[PARAM_FINAL]
name = Final cut
type = float
icon = icons/height.png
tool_tip = Rappid height
value = #<_global_final>


[DEFINITIONS]
content = 
	(Multipass sub definition)
	O<multipass_cspir> SUB
		#<sub> = #1
		#<depth> = #2
		#<step> = #3
		#<surface> = #4
		#<rappid> = #5
		#<final> = #6		
		#<x0> = #7
		#<y0> = #8		
		#<r> = #9 
		#<v> = #10 
		#<_new_spir_r>=[#<r>]
		#<fixr> = #<r> 
  
		G0 Z#<rappid>
		G0 X#<x0> Y#<y0>
		#<z> = #<surface>
		G1 Z#<z> 
		O<multipass-while> WHILE [#<z> GT [#<depth>+#<final>]]
			
			#<z> = [#<z>-#<step>]
			#<dz> = [#<step>]
			O<multipass-if> IF [#<z> LT [#<depth>+#<final>]]
				#<dz> = [#<z>+#<step>-#<depth>-#<final>]]
				#<z>=[#<depth>+#<final>]
			O<multipass-if> ENDIF 
			(call pass sub with the restof parameters)
			#<sub> = #1
			O#1 CALL [#<x0>-#<fixr>] [#<y0>] [#<z>+#<dz>] [#<r>] [#<step>] [#<v>]
			#<r> = #<_new_spir_r>
		O<multipass-while> ENDWHILE
		
		(Make final cut)
		O#1 CALL [#<x0>-#<fixr>] [#<y0>] [#<depth>+#<final>] [#<r>] [#<final>] [#<v>]
		O#1 CALL [#<x0>-#<fixr>] [#<y0>] [#<depth>] [#<r>] [0] [#<v>]
	
		G0 Z#<rappid>	
	O<multipass_cspir> ENDSUB	

	(Circle sub definition)
	#<_circle-spiral> = <eval>self.get_unique_id()</eval> ; should be unique id	
	O#<_circle-spiral> SUB
		#<cx> = #1   
		#<cy> = #2
		#<z>  = #3
		#<r>  = #4
		#<stepz> = #5
		#<v> = #6 
		#<dz> = [#<stepz>/3600]
		#<dr>  = [#<stepz>*TAN[#<v>]/3600]
		#<delta>  = [0.1]
		#<angle>  = [0]
		O<multipass-do01> DO
			#<angle>  = [#<angle> + #<delta>] 
			#<z> = [#<z>-#<dz>]
			#<_new_spir_r>=[#<_new_spir_r>-#<dr>]
			#<spx> = [#<cx>+#<_new_spir_r>*COS[#<angle>]]
			#<spy> = [#<cy>+#<_new_spir_r>*SIN[#<angle>]]
			G1 X#<spx> Y#<spy> Z[#<z>]	
		O<multipass-do01> WHILE [#<angle> LT 360]	

	O#<_circle-spiral> ENDSUB
	

[CALL]
content = 
	(Call circle sub cx cy r depth rappid)
	O<multipass_cspir> CALL [#<_circle-spiral>]  [#param_depth]  [#param_depth_step]  [#param_surface]  [#param_rappid]  [#param_final] [#param_cx+#param_d/2] [#param_cy] [#param_d/2] [#param_v]
	
[BEFORE]
content = 
	
[AFTER]
content = 
