[SUBROUTINE]
icon = icons/circle.png
name = Circle Spiral
image = images/circle.png
type = Circle Spiral
help = 	<big>Creates circle</big>
		Parameters: <i>CX CY R V Precision</i>
order = cx cy d v precis

[PARAM_CX]
name = CX
type = float
icon = icons/rect.png
tool_tip = CX
value = 0

[PARAM_CY]
name = CY
type = float
icon = icons/rect.png
tool_tip = CY
value = 0

[PARAM_D]
name = D
type = float
icon = icons/diameter.png
tool_tip = Diameter
value = 10

[PARAM_V]
name = V
type = float
icon = icons/angle-vert.png
tool_tip = Vert angle
value = 1

[PARAM_PRECIS]
name = Precision
type = float
icon = icons/arc-tangent.png
tool_tip = Lenght of approximation lines
value = 0.1


[DEFINITIONS]
content = 
	(Multipass sub definition)
	O<multipass_cspir> SUB
		#1 = #<_circle-spiral> 
		#<sub> = #1
		#<x0> = #2 
		#<y0> = #3
		#<r> = #4
		#<v> = #5
		#<depth> = [#<_global_depth>]
		#<step> = [#<_global_depth_step>] 
		#<surface> = [#<_global_surface>]
		#<rappid> = [#<_global_rappid>]
		#<final> = [#<_global_final>]		
		#<_new_spir_r>=[#<r>]
		#<fixr> = #<r> 
		F#<_global_feed> S#<_global_spindle>
		G0 Z#<rappid>
		G0 X#<x0> Y#<y0>
		#<z> = #<surface>
		G1 Z#<z> 
		O<multipass-while> WHILE [#<z> GT [#<depth>+#<final>]]
			
			#<z> = [#<z>-#<step>]
			#<dz> = [#<step>]
			O<multipass-if> IF [#<z> LT [#<depth>+#<final>]]
				#<dz> = [#<z>+#<step>-#<depth>-#<final>]
				#<z>=[#<depth>+#<final>]
			O<multipass-if> ENDIF 
			(call pass sub with the restof parameters)
			#<sub> = #1
			O#1 CALL [#<x0>-#<fixr>] [#<y0>] [#<z>+#<dz>] [#<r>] [#<dz>] [#<v>]
			#<r> = #<_new_spir_r>
			O<multipass-if01> IF [#<_new_spir_r> LT 0]
				#<final>=0
				O<multipass-while> BREAK
			O<multipass-if01> ENDIF 
		O<multipass-while> ENDWHILE
		
		(Make final cut)
		O<multipass-if02> IF [#<final> GT 0]
			F#<_global_final_feed> S#<_global_final_spindle>
	(print, x=#<x0>,y=#<y0>,fixr=#<fixr>,depth=#<depth>,final=#<final>,r=#<r>,v=#<v>)
			#<sub> = #1
			O#1 CALL [#<x0>-#<fixr>] [#<y0>] [#<depth>+#<final>] [#<r>] [#<final>] [#<v>]
		O<multipass-if02> ENDIF
		#<sub> = #1
		O#1 CALL [#<x0>-#<fixr>] [#<y0>] [#<depth>] [#<r>] [0] [#<v>]
		G0 Z#<rappid>	
	O<multipass_cspir> ENDSUB	

		(Circle sub definition)
		#<_circle-spiral> = <eval>self.get_unique_id()</eval> ; should be unique id	
		O#<_circle-spiral> SUB
			#<cx> = #1   
			#<cy> = #2
			#<z>  = #3
			#<r>  = #4
			#<stepz> = #5
			#<v> = #6
			#<pi> = [3.14159265]
			#<precis> = [#param_precis]
			#<delta>  = [360.000*#<precis>/[2*#<pi>*#<r>]]
			#<dz> = [#<stepz>/[360.000/#<delta>]]
			#<dr>  = [#<stepz>*TAN[#<v>]/[360.000/#<delta>]]
			#<angle1>  = #<delta>
			O<circle-spiral-do01> WHILE [#<angle1> LT 360.00]	
	(print, START WHILE angle=#<angle1>)
				#<z> = [#<z>-#<dz>]
				#<_new_spir_r>=[#<_new_spir_r>-#<dr>]
	(print,new_spir_r=#<_new_spir_r>,dz=#<dz>,delta=#<delta>)
				O<circle-spiral-if01> IF [#<_new_spir_r> GE 0]
					#<spx> = [#<cx>+#<_new_spir_r>*COS[#<angle1>]]
					#<spy> = [#<cy>-#<_new_spir_r>*SIN[#<angle1>]]
	(print, x=#<spx>,y=#<spy>,z=#<z>,angle=#<angle1>)
					G1 X#<spx> Y#<spy> Z#<z>	
				O<circle-spiral-if01> ELSE
	(print, BREAK)
					O<circle-spiral-do01> BREAK
				O<circle-spiral-if01> ENDIF
	(print, FIN WHILE angle=#<angle1>)
				#<angle1>  = [#<angle1> + #<delta>] 
			O<circle-spiral-do01> ENDWHILE	

		O#<_circle-spiral> ENDSUB
	

[CALL]
content =
	(Call circle sub cx cy r depth rappid)
	#<r> = [#param_d/2]
	#<r> = [#<r> + 0.5*#<_global_tool_d>]
	#<x0> = [#param_cx+#<r>]
	#<y0> = [#param_cy]	
	#<v> = [#param_v]
	O<multipass_cspir> CALL [#<_circle-spiral>] [#<x0>] [#<y0>] [#<r>] [#<v>]

	
[BEFORE]
content = 
	
[AFTER]
content = 
