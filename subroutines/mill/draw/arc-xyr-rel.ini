[SUBROUTINE]
icon = icons/arc-to-xyr.png
name = Arc to by XYR
image = images/arc-to-xyr.png
type = Arc to by XYR
help = 	<big>Arc to</big>
	Params:
		X,Y - relative coordinates of the end
		R - radius of the arc
	
order = g x y r in_out

[PARAM_G]
name = CW/CCW (G2|G3)
type = float
icon = icons/arc-cw-ccw.png
tool_tip = Enter 2 for CW arc, 3 for CCW arc
value = 2

[PARAM_X]
name = X
type = float
icon = icons/x.png
tool_tip = X
value = 10

[PARAM_Y]
name = Y
type = float
icon = icons/y.png
tool_tip = Y
value = 10

[PARAM_R]
name = Radius
type = float
icon = icons/r.png
tool_tip = Arc radius
value = 10

[PARAM_IN_OUT]
name = In or Out
type = float
icon = icons/arc-in-out.png
tool_tip = Create arc less than 180 degree (0) or greater than 180 degree (0)
value = 0


[DEFINITIONS]

[DEFINITIONS]
content = 

[BEFORE]
content = 

	
[AFTER]
content = 


[CALL]
content = 
	#<draw_tmp_g> = [#param_g]
	#<draw_tmp_x> = [[#param_x]+#<_draw_x>]
	#<draw_tmp_y> = [[#param_y]+#<_draw_y>]
	#<draw_tmp_r> = [#param_r]
	#<draw_tmp_in_out> = [#param_in_out]	
	;py,milldraw.arc_to_xyr(interpreter.this.params['draw_tmp_g'],interpreter.this.params['draw_tmp_x'],interpreter.this.params['draw_tmp_y'],interpreter.this.params['draw_tmp_r'],interpreter.this.params['draw_tmp_in_out'])
	#<_draw_x> = [[#param_x]+#<_draw_x>]
	#<_draw_y> = [[#param_y]+#<_draw_y>]
	
