[SUBROUTINE]
icon = icons/probe-down.png
name = Probe
image = images/probe-down.png
type = Probe-down
help = 	<big>Probe downwards</big>
order = x y func feed latch latch_feed depth rappid

[PARAM_X]
name = X
type = float
#icon = 
tool_tip = X
value = 

[PARAM_Y]
name = Y
type = float
#icon = 
tool_tip = Y
value = 

[PARAM_FUNC]
name = Gcode
type = float
icon = icons/gcode.png
tool_tip = 
	G38.2 - probe toward workpiece, stop on contact, signal error if failure
	G38.3 - probe toward workpiece, stop on contact
	G38.4 - probe away from workpiece, stop on loss of contact, signal error if failure
	G38.5 - probe away from workpiece, stop on loss of contact
	(Do not write G, just '38.2'.)
value = 38.2

[PARAM_FEED]
name = Feed
type = float
icon = icons/feed.png
tool_tip = Probe fast feed
value = #<_global_probe_feed>

[PARAM_LATCH]
name = Latch dist
type = float
icon = icons/dz.png
tool_tip = Latch distance
value = #<_global_latch>

[PARAM_LATCH_FEED]
name = Latch feed
type = float
icon = icons/feed.png
tool_tip = Probe latch feed
value = #<_global_latch_feed>

[PARAM_DEPTH]
name = Depth
type = float
icon = icons/height.png
tool_tip = Maximum depth
value = -100

[PARAM_RAPPID]
name = Rappid
type = float
icon = icons/height.png
tool_tip = Rappid height
value = #<_global_rappid>




[DEFINITIONS]
content = 

[CALL]
content = 
	(Probe down)
	<eval>self.include_once("probe.ngc")</eval>
	<exec>
		g0 = ""
		p = self.get_param_value("param_x")
		if p and p.strip()!="" :
			g0 += " X"+p
		p = self.get_param_value("param_y")
		if p and p.strip()!="" :
			g0 += " Y"+p
		if g0!="" :
			print "G0 Z[%s]"%self.get_param_value("param_rappid")
			print "G0 "+g0
	</exec>		
	O<probe> call [#param_func] [#param_feed] [#param_latch] [#param_latch_feed] [0] [0] [#param_depth]
	
[BEFORE]
content = 
	
[AFTER]
content = 
